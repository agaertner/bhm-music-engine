<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Select an output device..." xml:space="preserve">
    <value>Wähle ein Ausgabegerät…</value>
  </data>
  <data name="Background Music" xml:space="preserve">
    <value>Hintergrundmusik</value>
  </data>
  <data name="Mounted" xml:space="preserve">
    <value>Reitend</value>
  </data>
  <data name="Defeated" xml:space="preserve">
    <value>Besiegt</value>
  </data>
  <data name="Day" xml:space="preserve">
    <value>Tag</value>
  </data>
  <data name="Night" xml:space="preserve">
    <value>Nacht</value>
  </data>
  <data name="Master Volume" xml:space="preserve">
    <value>Lautstärke</value>
  </data>
  <data name="Playlists" xml:space="preserve">
    <value>Wiedergabelisten</value>
  </data>
  <data name="Your clipboard does not contain a valid link." xml:space="preserve">
    <value>Deine Zwischenablage enthält keinen gültigen Link.</value>
  </data>
  <data name="Link pasted. Checking..." xml:space="preserve">
    <value>Link eingefügt. Prüfe…</value>
  </data>
  <data name="Please wait." xml:space="preserve">
    <value>Bitte warte.</value>
  </data>
  <data name="Unsupported website." xml:space="preserve">
    <value>Nicht unterstützte Webseite.</value>
  </data>
  <data name="This track is already in the playlist." xml:space="preserve">
    <value>Dieser Titel ist bereits hinzugefügt.</value>
  </data>
  <data name="Something went wrong. Please try again." xml:space="preserve">
    <value>Es ist ein Fehler aufgetreten. Bitte versuche es erneut.</value>
  </data>
  <data name="Enable or disable this playlist." xml:space="preserve">
    <value>Aktiviere oder deaktiviere diese Wiedergabeliste.</value>
  </data>
  <data name="Enabled" xml:space="preserve">
    <value>Aktiviert</value>
  </data>
  <data name="Paste a video or audio link from your clipboard to add it to the playlist." xml:space="preserve">
    <value>Füge einen Video- oder Audiolink aus der Zwischenablage ein, um ihn der Wiedergabeliste hinzuzufügen.</value>
  </data>
  <data name="Recommended platforms:" xml:space="preserve">
    <value>Empfohlene Plattformen:</value>
  </data>
  <data name="Paste From Clipboard" xml:space="preserve">
    <value>Aus Zwischenablage einfügen</value>
  </data>
  <data name="Page Not Found." xml:space="preserve">
    <value>Seite nicht gefunden.</value>
  </data>
  <data name="Remove from Playlist" xml:space="preserve">
    <value>Aus Wiedergabeliste entfernen</value>
  </data>
  <data name="Use a different Output Device" xml:space="preserve">
    <value>Ein anderes Ausgabegerät verwenden</value>
  </data>
  <data name="Output Device" xml:space="preserve">
    <value>Ausgabegerät</value>
  </data>
  <data name="Mute when GW2 is in the background" xml:space="preserve">
    <value>Stumm schalten, wenn GW2 im Hintergrund läuft</value>
  </data>
  <data name="Checking link..." xml:space="preserve">
    <value>Prüfe Link…</value>
  </data>
  <data name="New database created." xml:space="preserve">
    <value>Neue Datenbank erstellt.</value>
  </data>
  <data name="Importing default playlists." xml:space="preserve">
    <value>Importiere Standard-Wiedergabelisten.</value>
  </data>
  <data name="Warclaw" xml:space="preserve">
    <value>Kriegsklaue</value>
  </data>
  <data name="Raptor" xml:space="preserve">
    <value>Raptor</value>
  </data>
  <data name="Siege Turtle" xml:space="preserve">
    <value>Belagerungsschildkröte</value>
  </data>
  <data name="Springer" xml:space="preserve">
    <value>Springer</value>
  </data>
  <data name="Skimmer" xml:space="preserve">
    <value>Schweberochen</value>
  </data>
  <data name="Griffon" xml:space="preserve">
    <value>Greif</value>
  </data>
  <data name="Roller Beetle" xml:space="preserve">
    <value>Rollkäfer</value>
  </data>
  <data name="Skyscale" xml:space="preserve">
    <value>Himmelsschuppe</value>
  </data>
  <data name="Jackal" xml:space="preserve">
    <value>Schakal</value>
  </data>
  <data name="Skiff" xml:space="preserve">
    <value>Skiff</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Einstellungen</value>
  </data>
  <data name="Resume" xml:space="preserve">
    <value>Fortsetzen</value>
  </data>
  <data name="Pause" xml:space="preserve">
    <value>Pausieren</value>
  </data>
  <data name="Continue" xml:space="preserve">
    <value>Fortsetzen</value>
  </data>
  <data name="New music available!" xml:space="preserve">
    <value>Neue Musik verfügbar!</value>
  </data>
  <data name="Updating..." xml:space="preserve">
    <value>Aktualisiere…</value>
  </data>
  <data name="Automatically update default music." xml:space="preserve">
    <value>Automatisch Standardmusik aktualisieren.</value>
  </data>
  <data name="Done." xml:space="preserve">
    <value>Fertig.</value>
  </data>
  <data name="{0} is ready." xml:space="preserve">
    <value>{0} ist bereit.</value>
  </data>
  <data name="Play to completion." xml:space="preserve">
    <value>Vollständig abspielen.</value>
  </data>
  <data name="Next" xml:space="preserve">
    <value>Weiter</value>
  </data>
  <data name="Previous" xml:space="preserve">
    <value>Zurück</value>
  </data>
  <data name="Will finish the current song even if dismounted." xml:space="preserve">
    <value>Spielt den aktuellen Song zuende, auch wenn Ihr absattelt.</value>
  </data>
  <data name="&quot;{0}&quot;\nis not available (Reason: {1})" xml:space="preserve">
    <value>&quot;{0}&quot;
ist nicht verfügbar (Grund: {1})</value>
  </data>
  <data name="Deleted" xml:space="preserve">
    <value>Gelöscht</value>
  </data>
  <data name="Unknown" xml:space="preserve">
    <value>Unbekannt</value>
  </data>
  <data name="Depublished" xml:space="preserve">
    <value>Depubliziert</value>
  </data>
  <data name="Geo-Blocked" xml:space="preserve">
    <value>Geoblockiert</value>
  </data>
  <data name="Would you like to remove this track from all playlists?" xml:space="preserve">
    <value>Möchtest Du diesen Titel aus allen Wiedergabelisten entfernen?</value>
  </data>
  <data name="Enable crossfade track transition." xml:space="preserve">
    <value>Überblendung bei Titelwechsel einschalten.</value>
  </data>
  <data name="Crossfade Duration" xml:space="preserve">
    <value>Überblendungsdauer</value>
  </data>
  <data name="Copy Playlists" xml:space="preserve">
    <value>Kopiere Wiedergabelisten</value>
  </data>
  <data name="Play {0} by {1}" xml:space="preserve">
    <value>{0} von {1} abspielen</value>
  </data>
</root>