<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Select an output device..." xml:space="preserve">
    <value>Sélectionnez un périphérique de sortie...</value>
  </data>
  <data name="Background Music" xml:space="preserve">
    <value>Musique de fond</value>
  </data>
  <data name="Mounted" xml:space="preserve">
    <value>Monté</value>
  </data>
  <data name="Defeated" xml:space="preserve">
    <value>Vaincu</value>
  </data>
  <data name="Day" xml:space="preserve">
    <value>Jour</value>
  </data>
  <data name="Night" xml:space="preserve">
    <value>Nuit</value>
  </data>
  <data name="Master Volume" xml:space="preserve">
    <value>Volume principal</value>
  </data>
  <data name="Playlists" xml:space="preserve">
    <value>Listes de lecture</value>
  </data>
  <data name="Your clipboard does not contain a valid link." xml:space="preserve">
    <value>Votre presse-papier ne contient pas de lien valide.</value>
  </data>
  <data name="Link pasted. Checking..." xml:space="preserve">
    <value>Lien collé. Vérification...</value>
  </data>
  <data name="Please wait." xml:space="preserve">
    <value>Veuillez patienter.</value>
  </data>
  <data name="Unsupported website." xml:space="preserve">
    <value>Site non supporté.</value>
  </data>
  <data name="This track is already in the playlist." xml:space="preserve">
    <value>Cette piste est déjà dans la liste de lecture.</value>
  </data>
  <data name="Something went wrong. Please try again." xml:space="preserve">
    <value>Quelque chose ne s&apos;est pas passé correctement. Veuillez réessayer.</value>
  </data>
  <data name="Enable or disable this playlist." xml:space="preserve">
    <value>Activer ou désactiver cette piste de lecture.</value>
  </data>
  <data name="Enabled" xml:space="preserve">
    <value>Activé</value>
    <comment>Activé(e) if multi usage</comment>
  </data>
  <data name="Paste a video or audio link from your clipboard to add it to the playlist." xml:space="preserve">
    <value>Copiez un lien de vidéo ou de musique de votre presse-papier pour l&apos;ajouter à votre liste de lecture.</value>
  </data>
  <data name="Recommended platforms:" xml:space="preserve">
    <value>Plateformes recommandées :</value>
  </data>
  <data name="Paste From Clipboard" xml:space="preserve">
    <value>Copier depuis le presse-papier</value>
  </data>
  <data name="Page Not Found." xml:space="preserve">
    <value>Page non trouvée.</value>
  </data>
  <data name="Remove from Playlist" xml:space="preserve">
    <value>Supprimer de la liste de lecture</value>
  </data>
  <data name="Use a different Output Device" xml:space="preserve">
    <value>Utiliser un autre périphérique de sortie</value>
  </data>
  <data name="Output Device" xml:space="preserve">
    <value>Périphérique de sortie</value>
  </data>
  <data name="Mute when GW2 is in the background" xml:space="preserve">
    <value>Passer en mode silencieux lorsque GW2 est en tâche de fond.</value>
  </data>
  <data name="Checking link..." xml:space="preserve">
    <value>Vérification du lien…</value>
  </data>
  <data name="New database created." xml:space="preserve">
    <value>Création d&apos;une nouvelle base de données.</value>
  </data>
  <data name="Importing default playlists." xml:space="preserve">
    <value>Importation de listes de lecture par défaut.</value>
  </data>
  <data name="Warclaw" xml:space="preserve">
    <value>Razziafelis</value>
  </data>
  <data name="Raptor" xml:space="preserve">
    <value>Raptor</value>
  </data>
  <data name="Siege Turtle" xml:space="preserve">
    <value>Tortue de siège</value>
  </data>
  <data name="Springer" xml:space="preserve">
    <value>Frappesol</value>
  </data>
  <data name="Skimmer" xml:space="preserve">
    <value>Voldécume</value>
  </data>
  <data name="Griffon" xml:space="preserve">
    <value>Griffon</value>
  </data>
  <data name="Roller Beetle" xml:space="preserve">
    <value>Scaraboule</value>
  </data>
  <data name="Skyscale" xml:space="preserve">
    <value>Dracaille</value>
  </data>
  <data name="Jackal" xml:space="preserve">
    <value>Chacal</value>
  </data>
  <data name="Skiff" xml:space="preserve">
    <value>Esquif</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Paramètres</value>
  </data>
  <data name="Resume" xml:space="preserve">
    <value>Reprendre</value>
  </data>
  <data name="Pause" xml:space="preserve">
    <value>Pause</value>
  </data>
  <data name="Continue" xml:space="preserve">
    <value>Continuer</value>
  </data>
  <data name="New music available!" xml:space="preserve">
    <value>Nouvelle musique disponible!</value>
  </data>
  <data name="Updating..." xml:space="preserve">
    <value>Mise à jour…</value>
  </data>
  <data name="Automatically update default music." xml:space="preserve">
    <value>Mise à jour automatique de la musique par défaut.</value>
  </data>
  <data name="Done." xml:space="preserve">
    <value>Fait.</value>
  </data>
  <data name="{0} is ready." xml:space="preserve">
    <value>{0} est prêt.</value>
  </data>
</root>